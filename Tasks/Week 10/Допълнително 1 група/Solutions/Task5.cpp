//Качваме и това, тъй като се оказа, че задачата от понеделника на Никола сме я разбрали по друг начин, а така или иначе ви ч обяснявахме така

int positions(string& str, int arr[])//функцията ще ни връща колко са думите в низа ни
{
	int lenght = str.size();
	int counter = 0;//До къде сме запълнили масива
	int begin = 0;//Индекс, показващ позицията, от която започва дадедан дума
	for (int i = 0; i < lenght; i++)
	{
		if (str[i] >= 'a' && str[i] <= 'z' || str[i] >= 'A' && str[i] <= 'Z')
		{
			if (i == lenght - 1)//в случай, че имаме дума, а се намираме в края на низа
			{
				arr[counter] = begin;
				counter++;
			}
			continue;
		}
		else if (str[i] != ' ')
		{
			for (i++; i < lenght && str[i] != ' '; i++);
      //Ако по средата на някоя дума се появи елемент, който не е буква, искаме да прескочим целия този подниз, докато не стигнем интервал (или края на низа)
			begin = i + 1;//Съответно слагамее индекса да е позицията след интервала.
		}
		else//В този else влизаме само ако се намираме на интервал, тоест, вече сме имали даден подниз, в който не е имало символ, различен от буква (тоес имаме дума)
		{
			if (i - 1 >= 0 && str[i - 1] != ' ')//Проверка в слуачай, че символът педи текущия е интервал (тоест не сме имали дума преди текущия интервал)
			{
				arr[counter] = begin;
				counter++;
				begin = i + 1;
			}
			else begin++;
      //Увеличавамe и индекса, тъй като иначе няма да вземем предвид натрупването на интервалите и, ако, да кажем, низът 
      //започва с няколко интервала, програмата ни няма да ги вземе предвид.
		}
	}
	return counter;
  
  int main()
{	
	string str;
	getline(cin, str);
	int arr[20];
	int count = positions(str, arr);
  
	for (int i = 0; i < count; i++)
		cout << arr[i] << " ";
}
