/*
	Задача 3

	Да се напише функция, която по подаден низ с максимум 20 думи 
	и целочислен масив от 20 елемента, да се намерят и запишат в 
	масив индексите на началото на всяка дума. Дума наричаме поредица 
	от символи, които са букви.
*/

#include <iostream>
#include <string>
using namespace std;

const int N = 20;

/*
* Функция, която по подаден символ проверява дали той е латинска буква
*/
bool isAlpha(char ch) {
	return (ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z' ? true : false);
}

/*
*   Функция, която по подаден символен низ, запълва подаден масив
*   с индексите на първите букви на всяка дума. Ако символния низ
*   е пазен функцията се прекратява още в началото.
* 
*   Определяме кога почва една дума ако на дадена позиция i в низ
*   имаме нещо различно от латинска буква и на i+1 място имаме 
*   латинска буква. ( 0 <= i <= str.length()-2).
* 
*	@param[in]  str  въпросния символен низ
*	@param[out] arr  масива, в който ще записваме индексите 
*	@param[out] size размера, който използваме от масива
*/	
void findFirstLetter(string str, int arr[], int& size) {
	if (!str.length()) return;

	size = 0;  //Зануляваме колко елемента ползваме от масива

	//Понеже не можем да определим дали има преминаване от не буква към буква
	//за първия елемент на символния низ, ще се напраим отделна проверка специално
	//за нея. Ако първия елемент е буква то значи там започва дума.
	if (isAlpha(str[0])) {
		arr[size] = 0;
		size++;
	}

	//За всеки елемент i от низа гледаме дали има промяна от не-буква към буква
	for (int i = 0; i < str.length() - 1; i++) {
		//Ако условието е изпълнено то на i+1 позиция започва дума
		if (!isAlpha(str[i]) && isAlpha(str[i + 1])) {
			arr[size] = i+1;
			size++;
		}
	}
}

int main() {
	int size = 0, arr[N];

	string str = "graphics interchange format";

	findFirstLetter(str, arr, size);

	for (int i = 0; i < size; i++) {
		cout << arr[i] << " ";
	}

}