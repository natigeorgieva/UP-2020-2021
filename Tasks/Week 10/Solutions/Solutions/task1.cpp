/*
    Задача 1

    Да се реализират следните функции:

    -По подадени символен низ str и индекс i, да се промени символа на i-та позиция в подадения 
    низ на главна буква ако символа на тази позиция е малка буква (фнукц. toUpper)

    -По подадени символен низ str и индекс i, да се промени символа на i-та позиция в подадения 
    низ на малка буква ако символа на тази позиция е главна буква (фнукц. toLower)

    Направете си по желание и допълнителни функции (напр. дали този символ е буква и подобни).
*/

#include <iostream>
#include <string>

using namespace std;


/*
* Функция, която проверява дали един символ е малка буква
* 
* @param[in] ch подадения символ за проверка
* 
* @returns true - ако символа е малка буква
*          false - ако символа не е малка буква
*/
bool isLower(char ch) {

    //В ASCII таблицата малките латински букви са подредени една след друга
    //a, b, c, d, ..., z
    //възползваме се от факта, че символите в компютъра са просто някакви цели числа
    //и използваме познатата проверка дали нещо попада в някакъв интервал
    if (ch >= 'a' && ch <= 'z') return true;
    return false;
}

/*
* Функция, която проверява дали един символ е главна буква
*
* @param[in] ch подадения символ за проверка
*
* @returns true - ако символа е главна буква
*          false - ако символа не е главна буква
*/
bool isUpper(char ch) {
    if (ch >= 'A' && ch <= 'Z') return true;
    return false;
}


/*
* Функция, която по подаден символен низ и даден индекс, променя символа
* на главна буква, ако символа е бил малка буква
* 
* @param[out] str подадения по псевдоним низ, който променяме
* @param[in]  index желания индекс 
* 
* @exeption Ако низа е празен или индекса е извън границите му то функцията се
*           прекратява
*/
void toUpper(string& str, int index) {

    //Със length() взимаме размера на символния низ върху, който 
    //сме приложили функцията
    //В случая ако символния низ има дължина 0 той е празен
    if (!str.length()) {
        cout << "Null string..";
        return;
    }


    //Ако индекса не е в границите на символния низ прекратяваме изпълнението
    if (!(index >= 0 && index <= str.length())) {
        cout << "Index out of range..";
        return;
    }

    //Ако сме стигнали до тук значи всичко е точно с низа и индекса
    //Остана да проверим ако символа позиция index е малка буква
    //Ако е малка буква
    if (isLower(str[index])) {
        //знаем че нашата буква е малка, съответно ако извадим буквата 'a' от нея ще получим
        //релативната позиция на текущата малка буква напр. 'а'-> 0, 'b' -> 1, 'c' ->2, ..., 'z' -> 25
        //Ако след това добавим главно 'A' към релативната позиция ще получим главната която искаме
        // 'А' + 0 = 'А', 'А' + 1 = 'B',..., 'А' + 25 = 'Z'
        str[index] = str[index] - 'a' + 'A';
    }
}

void toLower(string& str, int index) {

    //Със length() взимаме размера на символния низ върху, който 
    //сме приложили функцията
    //В случая ако символния низ има дължина 0 той е празен
    if (!str.length()) {
        cout << "Null string..";
        return;
    }


    //Ако индекса не е в границите на символния низ прекратяваме изпълнението
    if (!(index >= 0 && index <= str.length())) {
        cout << "Index out of range..";
        return;
    }

    //Тук логиката е еквивалентна, само че понеже имаме главна буква вадим 'А',
    //за да намерим отново релативната позиция на буквата спрямо главните и след
    //това добавяме това отместване съм малко 'а', за да получим еквивалентната малка буква
    if (isUpper(str[index])) {
        str[index] = str[index] + 'a' - 'A';
    }
}

int main()
{
    int index;
    string str;

    cout << "Enter index";
    cin >> index;

    //Използваме ingore() върху потока, когато преди getline() 
    //сме ползвали форматирано теглене от потока cin, защо ще разберем някой ден..
    //Пробвайте без него и вижте какво с случва, да знаете ако на контролно/изпит се получат така нещата
    cin.ignore();       
    getline(cin, str);

    toUpper(str, index);
    toLower(str, index - 5);

    cout << str;


}
