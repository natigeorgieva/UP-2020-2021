//С първия цикъл правим обхождането до главния диагонал (включително)

for (int i = N - 1; i >= 0; i--)//Всяко диагонално обхождане започва от различен ред (вървеейки отдолу нагоре)
	{
		int copy = i;//тъй като и редът се мени, а искаме да помним до къде сме стигнали (i), си правим променлива,
    която е равна на реда, от който започваме и ще се увеличава с всяко увеличване на стълба
    
		for (int j = 0; j < N - i; j++)//Всяко диагонално обхождне започва от първия стълб
		{// За условието до къде да стига j, обърнете внимание на симетрията, като започваме на N-1 ред, печатаме 1 елемент, започвайки от N-2 ред- два елементта и т.н.
			
      cout << arr[copy][j] << " ";
			copy++;//не забравяме да увеличаваме, тъй като и редовете се увеличават при диагоналното обхождане
		}
	}


//С този над главния диагонал

	for (int j = 1; j < N; j++)//Тук пък обхождаме по стълбове
	{
		int copy = j;//Аналогично на огрния цикъл, само че този път по стълбове си пазим до къде сме стигнали
		for (int i = 0; i < N - j; i++)//Съответно увеличаваме редовете, за да е диагонално обхождането
    
		{//Условието за i пък е абсолютно аналогично на горния цикъл, симетрията е същата, ако започваме от 1 стълб - 1 елемент, 2 стълб - 2 елемента и т.н.
    
			cout << arr[i][copy] << " ";
			copy++;
		}
	}
